[
    {
        "prompt": "在osp开发平台中，有modelContainer组件，实现MC中设置值功能",
        "response": "modelContainer.setValue(key, value);"
    },
    {
        "prompt": "在osp开发平台中，有modelContainer组件，实现MC中获取值功能",
        "response": "modelContainer.getValue();"
    },
    {
        "prompt": "在osp开发平台中，有PO组件，实现生成PO对象功能",
        "response": "var PO = new JParamObject();"
    },
    {
        "prompt": "在osp开发平台中，有PO组件，实现往PO的Param中设置值功能",
        "response": "PO.setParam(key, value);"
    },
    {
        "prompt": "在osp开发平台中，有PO组件，实现从PO的Env中获取值功能",
        "response": "PO.getEnv(key, value);"
    },
    {
        "prompt": "在osp开发平台中，有EFRowSet组件，实现生成EFRowSet对象功能",
        "response": "var rowSet = new EFRowSet();"
    },
    {
        "prompt": "在osp开发平台中，有EFDataSet组件，实现生成EFDataSet对象功能",
        "response": "var dataSet = new EFDataSet();"
    },
    {
        "prompt": "在osp开发平台中，有EFMDMDataModel组件，实现生成EFMDMDataModel对象功能",
        "response": "var mdmDataModel = new EFMDMDataModel();"
    },
    {
        "prompt": "在osp开发平台中，实现生成UUID功能",
        "response": "var uuid = UUID();"
    },
    {
        "prompt": "在osp开发平台中，实现获取package中配置的变量功能",
        "response": "第一种方式：\nRegistry.getSystemParam('saveJSONForm2DB');\n第二种方式：\nEAI.getEnv(\"saveJSONForm2DB\", \"0\");\n// 注：【saveJSONForm2DB】为配置的key值\n获取EAIserver地址\nlet imUrl = EAIServerManager.getEAIServerPath('pm-im-server');"
    },
    {
        "prompt": "在osp开发平台中，实现获取环境变量功能",
        "response": "EAI.getEnv(key, def);"
    },
    {
        "prompt": "在osp开发平台中，实现设置环境变量功能",
        "response": "EAI.putEnv(key, value);"
    },
    {
        "prompt": "在osp开发平台中，实现系统提示(一个按钮提示)功能",
        "response": "window.showAlertMsg('系统提示', '请点击确定保存', '1', '确定', FunctionComp1);"
    },
    {
        "prompt": "在osp开发平台中，实现系统提示(两个按钮提示)功能",
        "response": "window.showConfirmMsg('系统提示', '请点击确定保存', '1', '确定', '取消', FunctionComp1, FunctionComp2);"
    },
    {
        "prompt": "在osp开发平台中，实现将后台返回的 dataSet 数据转成 EFDataSet 对象功能",
        "response": "var dataSet = Object.assign(new EFDataSet(), data.ResponseObject);"
    },
    {
        "prompt": "在osp开发平台中，实现关闭所有标签页功能",
        "response": "window.closeAllTabs();"
    },
    {
        "prompt": "在osp开发平台中，实现关闭当前页的GWT表单功能",
        "response": "window.closeCurrTabInReact();"
    },
    {
        "prompt": "在osp开发平台中，实现关闭id对应的tab功能",
        "response": "window.closeGWTFormInReact(id);"
    },
    {
        "prompt": "在osp开发平台中，实现关闭其它标签页功能",
        "response": "window.closeOtherTabs();"
    },
    {
        "prompt": "在osp开发平台中，实现获取内容的高度功能",
        "response": "window.getContentHeight();"
    },
    {
        "prompt": "在osp开发平台中，实现获取内容宽度功能",
        "response": "window.getContentWidth();"
    },
    {
        "prompt": "在osp开发平台中，实现获取标签页的数量功能",
        "response": "window.getTagsCount();"
    },
    {
        "prompt": "在osp开发平台中，实现跳转401界面功能",
        "response": "window.goToError401();"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现移动端退出登录功能",
        "response": "window.mobileLoginOut();"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现根据传入的item打开表单功能方法功能",
        "response": "window.openFormItem(props,item);"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现脚本中打开GWT表单功能",
        "response": "var stub = window.StubObject();\n // id可以不传，会自动生成随机数\nstub.setObject('id', '123123123');\nstub.setObject(\"contentView\", \"html5_FormDesigner.form1\");\nstub.setObject(\"caption\", \"表单设计器\");\nstub.setObject(\"forms\", \"html5_FormDesigner\");\nwindow.openGWTFormInReact(stub);"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现脚本中打开React设计器功能",
        "response": "window.openReactDesigner();"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现脚本中打开React表单功能",
        "response": "window.openReactForm(\n    {\n        id: 'id',\n        caption: '标题',\n        serverID: 'serverID', // 不需要可不传\n        config: {\n            displayType: 'DrawerForm', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\n            forms: '表单id',\n            windowWidth:'100px',\n            windowHeight:'100px',//弹窗的高度\n        }\n    }\n)\n或者\nwindow.openReactForm(\n    {\n        id: 'id',\n        caption: '标题',\n        serverID: 'serverID', // 不需要可不传\n        config: {\n            displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页\n            formID: '表单id',\n        }\n    }\n)\n或者\nlet param = {};\nparam.id = \"id\";\nparam.caption = '测试';\n \nlet config = {};\nconfig.displayType = 'DrawerForm';\nconfig.formID = '表单id';\nconfig.formType = 'ReactForm';\nconfig.windowWidth = '800';\nconfig.个性化参数 = xxxxx;\nparam.config = config;\n \nwindow.openReactForm(param);\n \n \n// 可能会用到的参数\nopenNum: '1',//如果openNum不等于1，则允许打开多个；默认不等于1"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现脚本中打开硬编码组件功能",
        "response": "window.openReactForm(\n    {\n        id: 'id',\n        caption: '标题',\n        serverID: 'serverID', // 不需要可不传\n        config: {\n            displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\n            reactCompType: '硬编码组件id',\n        }\n    }\n)"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现脚本打开iframe组件功能",
        "response": "window.openReactForm(\n    {\n        id: 'id',\n        caption: '标题',\n        serverID: 'serverID', // 不需要可不传\n        config: {\n            displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\n            webURL: 'iframe地址',\n        }\n    }\n)"
    },
    {
        "prompt": "在osp开发平台中，有PO组件，实现PO设置EFDataSet功能",
        "response": "PO.setValue(\"dataSetKey\",dataSet.toJson());\nPO.jsonTypeLimit.set(\"dataSetKey\", \"com.efounder.builder.base.data.EFDataSet\");"
    },
    {
        "prompt": "在osp开发平台中，有window、FormAlert组件，实现提醒功能",
        "response": "/**\n * 一个按钮提示\n * @param {*} title 标题\n * @param {*} infoText 提示内容\n * @param {*} messageType 图标类型，'MESSAGE_NORMAL'或'0'、'MESSAGE_WARN'或'1'、'MESSAGE_ERROR'或'2'、'MESSAGE_QUESTION'或'3'\n * @param {*} okText 按钮文本，默认为确定\n * @param {*} okFunc 确定回调函数\n */\nwindow.showAlertMsg('系统提示', '请点击确定保存', '1', '确定', FunctionComp1);\n \n/**\n * 两个按钮提示\n * @param {*} title 标题\n * @param {*} infoText 提示内容\n * @param {*} messageType 图标类型，'MESSAGE_NORMAL'或'0'、'MESSAGE_WARN'或'1'、'MESSAGE_ERROR'或'2'、'MESSAGE_QUESTION'或'3'\n * @param {*} okText 第二个按钮文本，默认为确定\n * @param {*} cancelText 第一个按钮文本，默认为取消\n * @param {*} okFunc 确定回调函数\n * @param {*} cancelFunc 取消回调函数\n */\nwindow.showConfirmMsg('系统提示', '请点击确定保存', '1', '确定', '取消', FunctionComp1, FunctionComp2);\n \n/**\n * 三个按钮提示\n * @param {*} title 标题\n * @param {*} infoText 提示内容\n * @param {*} messageType 图标类型，'MESSAGE_NORMAL'或'0'、'MESSAGE_WARN'或'1'、'MESSAGE_ERROR'或'2'、'MESSAGE_QUESTION'或'3'\n * @param {*} okText 第三个按钮文本，默认为确定\n * @param {*} submitText 第二个按钮文本\n * @param {*} cancelText 第一个按钮文本，默认为取消\n * @param {*} okFunc 确定回调函数\n * @param {*} submitFunc 提交回调函数\n * @param {*} cancelFunc 取消回调函数\n */\nwindow.showCustomMsg('系统提示', '请点击确定保存', '1', '确定', '提交', '取消', FunctionComp1, FunctionComp2, FunctionComp3);\n \n /**\n * alert提示框 ，一个按钮\n * @param infoText 提示文本内容\n * @param title 提示框标题\n * @param messageType 消息类型，图标类型，'MESSAGE_NORMAL'或'0'、'MESSAGE_WARN'或'1'、'MESSAGE_ERROR'或'2'、'MESSAGE_QUESTION'或'3'\n * @param okText ok按钮的标题，可传参数，默认为'确定'\n * @param okFunc 点击ok按钮后执行的自定义函数，可传参数\n */\nFormAlert.showAlert('请点击确定保存', '系统提示', '1', '确定', FunctionComp1);\n \n/**\n * confirm 两个按钮的消息提示框\n * @param infoText 提示文本内容\n * @param messageType 消息类型\n * @param title 提示框标题\n * @param okText ok按钮文字\n * @param cancelText no按钮文字\n * @param okFunc ok按钮对应的自定义函数\n * @param cancelFunc no按钮对应的自定义函数\n */\nFormAlert.showConfirm('请点击确定保存', '系统提示', '1', '确定', '取消', FunctionComp1, FunctionComp2);\n \n /**\n * 三个按钮的提示框\n * @param infoText 提示内容\n * @param title 提示标题\n * @param messageType 图标类型，提示类型\n * @param okText ok按钮标题\n * @param submitText no按钮标题\n * @param cancelText cancel按钮标题\n * @param okFunc ok按钮执行的自定义函数\n * @param submitFunc no按钮执行的自定义函数\n * @param cancelFunc cancel按钮执行的自定义函数\n */\nFormAlert.showMessage('请点击确定保存', '系统提示', '1', '确定', '提交', '取消', FunctionComp1, FunctionComp2, FunctionComp3);\n \n/**\n * 显示错误提示框\n * @param text\n */\nFormAlert.showErrorAlert('请点击确定保存');\n \n/**\n * 显示警告提示框\n * @param text\n */\nFormAlert.showWarnAlert('请点击确定保存')\n \n/**\n * 显示普通提示消息\n * @param text\n */\nFormAlert.showNormalAlert('请点击确定保存')"
    },
    {
        "prompt": "在osp开发平台中，有PO组件，实现PO设置json数组功能",
        "response": "var rowList = AGGrid1.getSelectedRowSetList();\nvar jsonArray = [];\nfor (let i = 0; i < rowList.length; i++) {\n    var rowSet = rowList[i];\n    jsonArray.push(rowSet.toJson());\n}\nPO.setValue(\"ITEM_DATA\",JSON.stringify(jsonArray));"
    },
    {
        "prompt": "在osp开发平台中，有Action组件，实现强制设置Action组件禁用/可用功能",
        "response": "XXXAction1.setForceDisable(true);//设置禁用\nXXXAction1.setForceEnable(true);//设置可用"
    },
    {
        "prompt": "在osp开发平台中，有AGGrid、column组件，实现表格手动实现行数据排序功能",
        "response": "// 根据 Column2 的数据排序\nAGGrid1.doSortByColumn(Column2);\n \n \n/**\n * 排序某列\n * @param dataSetColID 数据集列ID\n * @param order 可传参数，不传时按默认规则(默认 -> asc -> desc)排序； 'asc': 正序, 'desc': 倒序, null: 清空排序\n */\npublic doSortByColumn(column: Column, order?: string)\n \n \n/**\n * 清空所有排序状态\n */\npublic clearSorting()\n \n \n/**\n * 获取某一列的排序状态\n * @param column 列对象\n * @returns null: 默认状态  asc: 正序   desc: 倒序\n */\npublic getColumnSortState(column: Column)"
    },
    {
        "prompt": "在osp开发平台中，实现派发顶部事件功能",
        "response": "/**\n * 根据topEventID调用formViewContainer的topEventHandler方法\n * @param topEventID 事件ID\n * @param params 其他参数\n */\nTopEventManager.dispatchTopEvent('top_aggrid', '111')"
    },
    {
        "prompt": "在osp开发平台中，有window组件，实现系统提示弹窗",
        "response": "/**\n * 显示提示信息\n * @param {*} message title信息\n * @param {*} description 详细信息\n * @param {*} placement 显示位置： topLeft, topRight, bottomLeft, bottomRight， 显示位置默认都是topRight\n */\n \n \n// 打开带成功图标的弹窗\nwindow.InfoMsg().success(\"标题\",\"介绍\",\"topRight\");\n \n \n// 打开带信息图标的弹窗\nwindow.InfoMsg().info(\"标题\",\"介绍\",\"topRight\");\n \n \n// 打开带异常图标的弹窗\nwindow.InfoMsg().warn(\"标题\",\"介绍\",\"topRight\");\n \n// 打开带失败图标的弹窗\nwindow.InfoMsg().error(\"标题\",\"介绍\",\"topRight\");"
    },
    {
        "prompt": "在osp开发平台中，有WebService组件，实现调用接口功能",
        "response": "/**\n * IOM 方法\n * @param objectName 类名\n * @param objectMethod 方法名\n * @param paramObject PO对象\n * @param dataObject 可传对象\n * @param customObject 可传对象\n * @param addObject 可传对象\n * @param webContext 上下文对象\n */\nWebService1.IOM('FlowIOService', 'getFlowXML', PO);\n \n \n/**\n * SVR 方法\n * @param serviceKey 服务key\n * @param paramObject PO对象\n * @param dataObject 可传参数\n * @param customObject 可传参数\n * @param addObject 可传参数\n * @param webContext 可传参数\n */\nWebService1.SVR('LargeDICTService', PO);\n \n \n/**\n * POST、GET 调用 restful 接口\n * @param url 接口路径\n * @param data 入参\n * @param headers 请求头，可传参数\n */\nWebService1.POST('http://127.0.0.1:8080/PortalServer/xxx/xx', data);\nWebService1.GET('http://127.0.0.1:8080/PortalServer/xxx/xx', data);\n \n \n/**\n * 调用 restful 接口\n * @param url 接口路径\n * @param method 'GET' | 'DELETE' | 'HEAD' | 'OPTIONS' | 'POST' | 'PUT' | 'PATCH' | 'LINK' | 'UNLINK'\n * @param data 入参\n * @param headers 请求头，可传参数\n */\nWebService1.REST('http://127.0.0.1:8080/PortalServer/xxx/xx', 'GET', data);"
    },
    {
        "prompt": "在osp开发平台中，有EFDataSet组件，实现后台类EFDataSet，EFRowSet的json转EFDataSet，EFRowSet",
        "response": "// 转EFDataSet\nlet  dataSetJson = 后台传来的类似EFDataSet的json\nlet dataSet = new EFDataSet();\ndataSet = dataSet.toDataSet(dataSetJson)\n// 转EFRowSet\nlet  rowSetJson = 后台传来的类似EFRowSet的json\nlet rowSet = new EFRowSet();\nrowSet = rowSet.toRowSet(rowSetJson)"
    },
    {
        "prompt": "在osp开发平台中，设置默认时间",
        "response": "var date = new Date();\nvar year = date.getFullYear().toString();\nvar month = (date.getMonth()+1).toString();\nif(month.length == 1){\n    month = \"0\"+month;\n}\nvar days = date.getDate().toString();\nif(days.length ==1){\n    days = \"0\"+days\n}\nvar date = year+month+days;\nbillRowSet.putObject(\"日期字段\",date);"
    },
    {
        "prompt": "在osp开发平台中，有FunctionComp组件，实现自定义应用全局参数场景",
        "response": "// A表单中定义全局参数\nCustomAppContext.setValue('CK_001', FunctionComp1);\nCustomAppContext.setValue('CK_002', FunctionListComp1);\n// B表单中获取全局参数\nvar comp1 = CustomAppContext.getValue('CK_001');\nvar comp2 = CustomAppContext.getValue('CK_002');\n// B表单中调用全局参数中的函数对象\n/**\n * 调用 FunctionComp 组件\n * @param key map中的key\n * @param args FunctionComp 组件的call方法参数\n * @returns\n */\nCustomAppContext.callFunctionComp('CK_001', '测试参数输出');\n \n/**\n * 调用 FunctionListComp 组件中的 funcName 方法\n * @param key map中的key\n * @param funcName FunctionListComp 中的函数名\n * @param args FunctionListComp 组件中的 funcName 方法参数\n * @returns\n */\nCustomAppContext.callFunctionListComp('CK_002', 'aaa', {\n    \"arg1\": 111,\n    \"arg2\": 222\n});\n"
    }
]